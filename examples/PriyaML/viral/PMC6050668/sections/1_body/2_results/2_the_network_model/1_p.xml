<?xml version="1.0" encoding="UTF-8"?>
<p>Figure 
 <xref rid="Fig4" ref-type="fig">4</xref> shows an example of the generated networks and its required data. In particular, given a network of size 
 <inline-formula id="IEq2">
  <alternatives>
   <tex-math id="M5">\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$N \in \mathbb {N}$\end{document}</tex-math>
   <math id="M6">
    <mi>N</mi>
    <mo>∈</mo>
    <mi>ℕ</mi>
   </math>
   <inline-graphic xlink:href="12889_2018_5709_Article_IEq2.gif" xmlns:xlink="http://www.w3.org/1999/xlink"/>
  </alternatives>
 </inline-formula>, each node was assigned an age such that the network’s age-distribution resembled that of the target population. Subsequently, nodes were assigned a number of contacts per day following a defined contact distribution of interest. Finally, the algorithm visited each node to generate the defined number of contacts, not at random but following a defined contact matrix. The network was returned as an adjacent matrix that is compatible to available network analyses algorithms, e.g., igraph, graph-tool [
 <xref ref-type="bibr" rid="CR61">61</xref>, 
 <xref ref-type="bibr" rid="CR62">62</xref>]. Storing data as a sparse matrix, a regular installation of R could generate reliably networks of 10-20 thousand nodes with the generation time 6-10 minutes on a single thread Intel Core i7, 8GB RAM. Note that R theoretically can only handle a maximum square matrix ≈44721 rows and columns. 
</p>
