<?xml version="1.0" encoding="UTF-8"?>
<p id="P31">We selected weakly informative priors for 
 <italic>α</italic>
 <sub>
  <italic>j</italic>
 </sub> (Gamma(0.001,0.001)) and 
 <italic>β</italic>
 <sub>
  <italic>j</italic>
 </sub> (Log-normal(0,0.001)), and assumed 
 <italic>ε</italic>
 <sub>
  <italic>i</italic>
 </sub> was normally distributed with mean 0 and variance 
 <italic>τ</italic>; again, we specified a weakly informative Gamma(0.001,0.001) prior for 
 <italic>τ</italic>. Posterior distributions were estimated via a Markov chain Monte Carlo (MCMC) sampling algorithm implemented using JAGS, run from the statistical program R with the rjags package 
 <sup>
  <xref rid="R50" ref-type="bibr">50</xref>,
  <xref rid="R51" ref-type="bibr">51</xref>
 </sup>. The algorithm was run for 100,000 iterations with 5,000 burn-in iterations for two chains. We fit the model to six datasets: the single-feed dissemination data (n=7 observations from our experimental results); the double-feed dissemination data (n=7 observations from our experimental results); the single-feed salivary gland data (n=3 observations from our experimental results); the double-feed salivary gland data (n=3 observations from our experimental results); the meta-analysis single-feed dissemination data (n=38 observations from 7 published studies aggregated with our single-feed dissemination results); and the meta-analysis single-feed salivary gland data (n=45 observations from 8 published studies). Convergence was assessed through visual inspection of trace plots and calculation of the Gelman–Rubin convergence diagnostic (97.5% quantile of 
 <inline-formula>
  <math display="inline" id="M10">
   <mover accent="true">
    <mrow>
     <mi>R</mi>
    </mrow>
    <mo>^</mo>
   </mover>
  </math>
 </inline-formula>&lt;1.1) for all monitored parameters 
 <sup>
  <xref rid="R52" ref-type="bibr">52</xref>
 </sup>. Using a thinned subset (10%) of each model’s respective posterior shape and rate posterior distributions, we estimated the posterior distribution of mean EIP values as E[EIP] = 
 <italic>α</italic>/
 <italic>β</italic> and Var(EIP)=
 <italic>α</italic>/
 <italic>β</italic>
 <sup>
  <italic>2</italic>
 </sup> for each iteration.
</p>
