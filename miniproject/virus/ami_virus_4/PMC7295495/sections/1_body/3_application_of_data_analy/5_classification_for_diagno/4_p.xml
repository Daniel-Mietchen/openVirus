<?xml version="1.0" encoding="UTF-8"?>
<p id="p0145">Next, classification algorithms are applied on the processed dataset to classify the COVID-19 positive patients from all suspected patients in the dataset. There are many popular classification algorithms including support vector machine (SVM), k nearest neighbors (kNN), XGBoost, multilayer perceptron (MLP), logistic regression (LR) and decision tree (DT), random forest (RF), majority voting and other ensemble methods. The parameters of these classifiers can also be varied to find the best result for a particular scenario. In this case, XGBoost, MLP, KNN, LR and DT are considered as these provide more promising results than others in our experiments. These well-known classifiers are briefly described in the following [
 <xref rid="bib28" ref-type="bibr">28</xref>,
 <xref rid="bib29" ref-type="bibr">29</xref>]. XGBoost is a DT-based ensemble classifier having a gradient boosting framework. It is designed for optimal hardware usage. MLP is a form of feed forward artificial neural network and composed of multiple layers of artificial neurons termed as perceptrons. In MLP algorithm, a perceptron uses an activation function which maps the weighted input of each neuron. In KNN, classification is performed by a plurality vote of the k neighbors where the output class is the one most closest to the neighbors. kNN is a non-parametric simple and versatile algorithm. Its implementation is easy, but the functioning gets slower with increase in the number of predictor variables. LR functions according to the concept of probability. LR is a form of classification algorithm where the observations are assigned to discrete classes with a logistic sigmoid function. This algorithm can be of three different types: binomial, multinomial and ordinal. In DT classifier, data are continuously split into subsets, then split into even smaller subsets, and this process continues until the data within the subsets become near homogenous. The structure of a DT is similar to flow-chart where each non-leaf nodes represent a test on an attribute, a branch represents the outcome of a test and each terminal node represent a class label. Moreover, DT algorithm is easy to interpret and performs well with large datasets.
</p>
