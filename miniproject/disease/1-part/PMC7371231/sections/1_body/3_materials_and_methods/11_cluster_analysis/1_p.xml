<?xml version="1.0" encoding="UTF-8"?>
<p>For the cluster analysis, we used the algorithm density-based spatial clustering applications with noise (DBSCAN)[
 <xref rid="ppat.1008656.ref067" ref-type="bibr">67</xref>], which was embedded into our custom analysis MatLab routine. DBSCAN only needs two input parameters, 
 <italic>Eps</italic> and 
 <italic>k</italic>. It then counts for each localization, how many neighbor localization are within a circle of radius 
 <italic>Eps</italic>. If the localization has 
 <italic>k</italic> neighbors within 
 <italic>Eps</italic>, it is classified as part of a cluster. If it does not have enough neighbors within 
 <italic>Eps</italic>, but is itself a neighbor of a cluster localization, it is classified as an edge point. All remaining localization are classified as unclustered. In order to analyze the very dense and heterogeneous localization maps we obtained from SNA imaging, we performed two consecutive DBSCAN runs with different parameters for 
 <italic>Eps</italic> and 
 <italic>k</italic>. Only this allowed us to account for all visually visible clusters. Clustered and edge points are then combined and handed over to the single cluster analysis part of the analysis routine. For each cluster, we examined a set of parameters such as area and mean diameter as well as the number of localizations per cluster. We further analyzed the localization density distribution per cluster by performing a nearest-neighbor search using a search radius of 20 nm. All localization processing was performed using custom written MatLab (MathWorks) scripts.
</p>
