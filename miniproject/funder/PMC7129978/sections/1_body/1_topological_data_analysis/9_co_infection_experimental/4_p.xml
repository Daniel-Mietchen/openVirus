<?xml version="1.0" encoding="UTF-8"?>
<p id="p0076">Nodes in the simplicial complex represent clusters of infected mice, and edges connect nodes that contain samples in common. Nodes are colored by the average value of their samples for the variables listed in the Figs’ legends and color maps. Three types of parameters are needed to generate a topological model: First is a notion of similarity, called a metric, which measures the distance between two points in some space (in our case, the points are the rows in the data and the space is a multidimensional space that can be plotted using the quantitative measurements of disease symptoms as axes, such as the pathogen load or cytokine concentration, i.e. the features of the data set). The metric we used is the correlation distance. Second are lenses, which are functions that describe the distribution of data in a space. A lens is a mathematical mapping (function) that converts a data set into a vector, in which each row in the original data set contributes to a real number in the vector; i.e. a lens operation turns every row into a single number. Metrics are used with lenses to construct the simplicial complex output. Multiple lenses can be used in each analysis. In this case, Keppler-Mapper handles them mathematically by considering the Cartesian product. Third is the resolution, which controls the number of bin partitions that will be created within the range of selected lens values, known as the number of intervals, and the amount of oversampling between bins, known as the percentage overlap. Clustering then takes place within the bins, forming the final vertices of the simplicial complex; and clusters are connected with an edge whenever they share data points within the region that are over-sampled according to the percentage overlap. Therefore increasing the number of bins increases the number of vertices and increasing the percentage overlap results in an increased number of edges. The metric, lenses, resolution, and clusterer used to generate the topological graphs in 
 <xref rid="fig0005" ref-type="fig">Figs. 5</xref> and 
 <xref rid="fig0006" ref-type="fig">6</xref> are as indicated in 
 <xref rid="tbl0001" ref-type="table">Table 1</xref> . K-Nearest Neighbour Analysis was implemented using the KNeighborsClassifier from the Scikit Learn Python library 
 <xref rid="bib0029" ref-type="bibr">[29]</xref>, with the correlation metric. T-tests were done using the ttest_ind function from the SciPy Python library.
</p>
