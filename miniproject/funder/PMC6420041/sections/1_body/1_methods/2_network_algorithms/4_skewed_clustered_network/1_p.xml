<?xml version="1.0" encoding="UTF-8"?>
<p>This is a variant of the algorithm described above. Again a person 
 <italic>i</italic> enters the network, and another person 
 <italic>j</italic> to receive an additional link is picked, with probability proportional to its current degree. Additional links are added, where the first neighbour is again picked with probability proportional to its number of contacts. The second neighbour is picked 
 <list list-type="simple">
  <list-item>
   <label>(i)</label>
   <p>among neighbours of second degree (neighbours’ neighbours) (at random)</p>
  </list-item>
  <list-item>
   <label>(ii)</label>
   <p>if that is not possible, among neighbours of third degree (at random)</p>
  </list-item>
  <list-item>
   <label>(iii)</label>
   <p>if that is not possible, in the whole network, with probability proportional to a node’s degree.</p>
  </list-item>
 </list> After people exit at a given rate, those left without neighbours are connected to existing nodes, with probability proportional to a person’s degree, and other links are broken.
</p>
