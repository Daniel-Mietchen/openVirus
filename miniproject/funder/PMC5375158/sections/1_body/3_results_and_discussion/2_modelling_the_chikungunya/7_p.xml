<?xml version="1.0" encoding="UTF-8"?>
<p>We used the python (v2.7) implementation of the 
 <monospace>hoppMCMC</monospace> (v0.5) algorithm, which benefits from a variable acceptance probability to jump between posterior modes and arrive at the ones with high-probabilities. We provided the probability function Pr(
 <italic>θ</italic>|
 <italic>d</italic>(
 <italic>y</italic>, 
 <italic>δ</italic>, 
 <italic>τ</italic>)) to the algorithm using the term 
 <italic>τ</italic> as the annealing temperature, and explored high-probability posterior modes within the parameter domains given in 
 <xref rid="pone.0174293.t001" ref-type="table">Table 1</xref>. Once identified, we sampled from the posterior mode using the adaptive Gibbs sampling algorithm of the 
 <monospace>hoppMCMC</monospace> package. We initiated each sampling step with the optimum parameter configuration identified in each optimisation step. We ran 50 chains for 2 × 10
 <sup>4</sup> iterations, discarded the initial half, and extracted 20 parameter configurations from each chain with regular intervals. We monitored the chains and their autocorrelation to ensure convergence (see 
 <xref ref-type="supplementary-material" rid="pone.0174293.s003">S1 File</xref> for detailed methodology). We note that our choice of 
 <monospace>hoppMCMC</monospace> is motivated by its performance and efficiency for systems with large number of parameters. If found wanting, a combination of alternative optimisation and Bayesian sampling algorithms can be used.
</p>
