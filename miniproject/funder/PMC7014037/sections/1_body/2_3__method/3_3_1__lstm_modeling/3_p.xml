<?xml version="1.0" encoding="UTF-8"?>
<p>The architecture has three layers: A single RNN layer with LSTM (hidden layer), which includes 64 memory cells; an input layer; and an output layer (
 <xref ref-type="fig" rid="ijerph-17-00453-f003">Figure 3</xref>). The initial learning rate was left at the value of 
 <inline-formula>
  <math id="mm9">
   <mrow>
    <mrow>
     <mn>1</mn>
     <msup>
      <mi>e</mi>
      <mrow>
       <mo>−</mo>
       <mn>4</mn>
      </mrow>
     </msup>
    </mrow>
   </mrow>
  </math>
 </inline-formula>. Since the transmission cycle of the dengue virus is one year in China, the time step of the LSTM network was set to 12. The root mean squared error (RMSE) in the validation set was smallest when the model input 12 sets of parameters to produce an output of the number of dengue cases in the next month (
 <xref rid="ijerph-17-00453-t002" ref-type="table">Table 2</xref>). Other Tensorflow defaults included weights’ and biases’ initialization and the activation function for the recurrent nodes. In addition, the regulation was used so that a dropout layer was added between the LSTM and the output layer and the dropout rate was set to 40% to combat network overfitting. The internal weight parameters of the LSTM neural network were adjusted through the adaptive momentum (Adam) optimizer [
 <xref rid="B45-ijerph-17-00453" ref-type="bibr">45</xref>]. The training time was 8000 epochs. Our source code is available at 
 <uri xlink:href="https://github.com/KeqiangXu/Dengue_Forecast_Based_on_LSTM" xmlns:xlink="http://www.w3.org/1999/xlink">https://github.com/KeqiangXu/Dengue_Forecast_Based_on_LSTM</uri>.
</p>
