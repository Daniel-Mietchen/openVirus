<?xml version="1.0" encoding="UTF-8"?>
<list list-type="simple">
 <list-item>
  <p>Step 1: Arbitrarily specify the control parameter set P = {α
   <sub>1</sub>, α
   <sub>2</sub>, α
   <sub>3</sub>}, then use MLE to obtain the optimal estimate of the logit model and generate the predicted value of new dengue fever cases per week that corresponds to the parameter P.
  </p>
 </list-item>
 <list-item>
  <p>Step 2: Use the formula for calculating 
   <italic>loss</italic> above to obtain the objective function value 
   <italic>loss</italic> in the forecasted data and observed data of new dengue fever cases per week.
  </p>
 </list-item>
 <list-item>
  <p>Step 3: Apply random perturbation to the control parameter set P (select 1 of the parameters randomly and add to it a random perturbation value that follows the normal distribution, keeping other parameter values unchanged) and obtain a new control parameter set P′. Calculate the value of the objective function 
   <italic>loss</italic>′ corresponding to P′.
  </p>
 </list-item>
 <list-item>
  <p>Step 4: Replace P with P′ according to the Metropolis rule: 
   <disp-formula id="pone.0225811.e004">
    <alternatives>
     <graphic xlink:href="pone.0225811.e004.jpg" id="pone.0225811.e004g" mimetype="image" position="anchor" orientation="portrait" xmlns:xlink="http://www.w3.org/1999/xlink"/>
     <math id="M4">
      <mrow>
       <mo>{</mo>
       <mtable columnalign="left">
        <mtr columnalign="left">
         <mtd columnalign="left">
          <mrow>
           <mi>p</mi>
           <mrow>
            <mo>(</mo>
            <mrow>
             <mi>p</mi>
             <mo>→</mo>
             <msup>
              <mi>p</mi>
              <mo>′</mo>
             </msup>
            </mrow>
            <mo>)</mo>
           </mrow>
           <mo>=</mo>
           <mn>1</mn>
          </mrow>
         </mtd>
         <mtd columnalign="left">
          <mrow>
           <mi>l</mi>
           <mi>o</mi>
           <mi>s</mi>
           <mi>s</mi>
           <mo>′</mo>
           <mo>≤</mo>
           <mi>l</mi>
           <mi>o</mi>
           <mi>s</mi>
           <mi>s</mi>
          </mrow>
         </mtd>
        </mtr>
        <mtr columnalign="left">
         <mtd columnalign="left">
          <mrow>
           <mi>p</mi>
           <mrow>
            <mo>(</mo>
            <mrow>
             <mi>p</mi>
             <mo>→</mo>
             <msup>
              <mi>p</mi>
              <mo>′</mo>
             </msup>
            </mrow>
            <mo>)</mo>
           </mrow>
           <mo>=</mo>
           <mi>e</mi>
           <mi>x</mi>
           <mi>p</mi>
           <mrow>
            <mo>(</mo>
            <mrow>
             <mfrac>
              <mrow>
               <mi>l</mi>
               <mi>o</mi>
               <mi>s</mi>
               <mi>s</mi>
               <mo>−</mo>
               <mi>l</mi>
               <mi>o</mi>
               <mi>s</mi>
               <msup>
                <mi>s</mi>
                <mo>′</mo>
               </msup>
              </mrow>
              <mi>c</mi>
             </mfrac>
            </mrow>
            <mo>)</mo>
           </mrow>
          </mrow>
         </mtd>
         <mtd columnalign="left">
          <mrow>
           <mi>l</mi>
           <mi>o</mi>
           <mi>s</mi>
           <mi>s</mi>
           <mo>′</mo>
           <mo>&gt;</mo>
           <mi>l</mi>
           <mi>o</mi>
           <mi>s</mi>
           <mi>s</mi>
          </mrow>
         </mtd>
        </mtr>
       </mtable>
      </mrow>
     </math>
    </alternatives>
    <label>(4)</label>
   </disp-formula> where 
   <italic>p</italic>(P→P′) indicates the probability of P′ replacing P. The temperature parameter 
   <italic>c</italic> is a variable; during loop iteration, each time the probability selection of 
   <italic>loss</italic>′&gt;
   <italic>loss</italic> is performed, 
   <italic>c</italic> decreases by a certain proportion (i.e., 
   <italic>c</italic> = 
   <italic>k × c</italic>, where 
   <italic>k</italic> is a constant temperature drop parameter less than 1).
  </p>
 </list-item>
 <list-item>
  <p>Step 5: When the number of invalid continuous perturbations is greater than the set threshold, the iteration ends. The control parameter set P prior to the last invalid perturbance becomes the estimation result for the final approximate optimal control parameter.</p>
 </list-item>
</list>
