<?xml version="1.0" encoding="UTF-8"?>
<p>We first consider each data stream independently. For each data stream 
 <italic>n</italic> we define a dissimilarity measure 
 <italic>d</italic>, used to compute distances between all pairs of cases (
 <xref ref-type="fig" rid="pcbi.1006554.g001">Fig 1A and 1D</xref>). We denote 
 <italic>d</italic>
 <sup>
  <italic>n</italic>
 </sup>
 <sub>
  <italic>i</italic>,
  <italic>j</italic>
 </sub> the distance between cases 
 <italic>i</italic> and 
 <italic>j</italic> with respect to data stream 
 <italic>n</italic>. We define a weighted graph linking all cases (nodes), where the weight of the edge between two cases 
 <italic>i</italic> and 
 <italic>j</italic> is given by 
 <italic>d</italic>
 <sup>
  <italic>n</italic>
 </sup>
 <sub>
  <italic>i</italic>,
  <italic>j</italic>
 </sub> (
 <xref ref-type="fig" rid="pcbi.1006554.g001">Fig 1B and 1E</xref>). We then prune the graph (
 <xref ref-type="fig" rid="pcbi.1006554.g001">Fig 1C and 1F</xref>) by removing all edges with weights above a predefined cutoff κ
 <sup>
  <italic>n</italic>
 </sup>, (see two sections below for considerations on cutoff choice). The resulting graph 
 <italic>G</italic>
 <sup>
  <italic>n</italic>
 </sup> = {
 <italic>N</italic>, 
 <italic>E</italic>
 <sup>
  <italic>n</italic>
 </sup>} contains all cases (nodes 
 <italic>N</italic>), and connects cases by edges (
 <italic>E</italic>
 <sup>
  <italic>n</italic>
 </sup>) if and only if the corresponding pairwise distance is less than κ
 <sup>
  <italic>n</italic>
 </sup>, so that 
 <italic>E</italic>
 <sup>
  <italic>n</italic>
 </sup> = {(
 <italic>i</italic>,
 <italic>j</italic>) | 
 <italic>d</italic>
 <sup>
  <italic>n</italic>
 </sup>
 <sub>
  <italic>i</italic>,
  <italic>j</italic>
 </sub> ≤ κ
 <sup>
  <italic>n</italic>
 </sup> ∀ 
 <italic>i</italic>,
 <italic>j</italic> ∈ 
 <italic>N</italic>}. Simply put, the graph 
 <italic>G</italic>
 <sup>
  <italic>n</italic>
 </sup> only connects cases which are similar to each other with respect to data stream 
 <italic>n</italic>.
</p>
