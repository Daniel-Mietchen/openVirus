<?xml version="1.0" encoding="UTF-8"?>
<p>If one would spend more effort mapping out the network, one can do significantly better than the acquaintance vaccination in finding the high-degree vertices. This is the idea of 
 <italic>Random walk</italic> vaccination. Under this heuristics one keeps a list of the 
 <italic>fN</italic> vertices with highest observed degree that is updated during a random walk of inquiries. This is based on Ref. [
 <xref rid="pcbi.1005696.ref016" ref-type="bibr">16</xref>] that proposed this method to find high-degree nodes in the World Wide Web and social networks in a cost-efficient way. Let 
 <italic>k</italic>
 <sub>
  <italic>i</italic>
 </sub> be the degree of node 
 <italic>i</italic>. When the random walk is at node 
 <italic>i</italic>, it jumps to a random node with probability 
 <italic>α</italic>/(
 <italic>k</italic>
 <sub>
  <italic>i</italic>
 </sub> + 
 <italic>α</italic>), and with complementary probability it proceeds to a randomly chosen neighbor of 
 <italic>i</italic>. The rationale is that the stationary probability of 
 <italic>i</italic> in such random walk is proportional to 
 <italic>k</italic>
 <sub>
  <italic>i</italic>
 </sub> + 
 <italic>α</italic>. We use 
 <italic>α</italic> = 3 following the recommendation from Ref. [
 <xref rid="pcbi.1005696.ref016" ref-type="bibr">16</xref>] that 
 <italic>α</italic> should be of the order of the average degree. This value will be the same in all networks because the performance is robust with respect to 
 <italic>α</italic>. The second parameter 
 <italic>m</italic> is the number of steps in the random walk. Rather than fixing this parameter, we will use the value that optimizes 
 <italic>χ</italic>.
</p>
